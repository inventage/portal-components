{
  "version": "experimental",
  "tags": [
    {
      "name": "portal-card",
      "path": "./components-ts/portal-card/portal-card.ts",
      "description": "A test component to display what a component can consist of, how it is documented and how to properly test it.\n\nUseful links:",
      "attributes": [
        {
          "name": "title",
          "type": "string",
          "default": "\"I am a glorious title\""
        },
        {
          "name": "back-side",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "title",
          "attribute": "title",
          "type": "string",
          "default": "\"I am a glorious title\""
        },
        {
          "name": "backSide",
          "attribute": "back-side",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "side-changed",
          "description": "Event fired when the card changes sides."
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "This is an unnamed slot (the default slot)"
        }
      ],
      "cssProperties": [
        {
          "name": "--portal-card-width",
          "description": "Width",
          "type": "Length"
        },
        {
          "name": "--portal-card-height",
          "description": "Height",
          "type": "Length"
        },
        {
          "name": "--portal-card-text-color",
          "description": "Text Color",
          "type": "Color"
        },
        {
          "name": "--portal-card-padding",
          "description": "Padding",
          "type": "Length"
        },
        {
          "name": "--portal-card-border",
          "description": "Border",
          "type": "String"
        },
        {
          "name": "--portal-card-border-radius",
          "description": "Border Radius",
          "type": "String"
        },
        {
          "name": "--portal-card-margin",
          "description": "Margin",
          "type": "Length"
        }
      ]
    },
    {
      "name": "portal-hamburger-menu",
      "path": "./components-ts/portal-hamburger-menu/portal-hamburger-menu.ts",
      "description": "A simple hamburger menu component.",
      "attributes": [
        {
          "name": "toggled",
          "description": "Reflects the toggled state.",
          "type": "Boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "toggled",
          "attribute": "toggled",
          "description": "Reflects the toggled state.",
          "type": "Boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "state-changed",
          "description": "Event fired when the hamburger menu state changes."
        }
      ],
      "cssProperties": [
        {
          "name": "--hamburger-padding-x",
          "type": "Length",
          "default": "\"3px\""
        },
        {
          "name": "--hamburger-padding-y",
          "type": "Length",
          "default": "\"10px\""
        },
        {
          "name": "--hamburger-layer-width",
          "type": "Length",
          "default": "\"26px\""
        },
        {
          "name": "--hamburger-layer-height",
          "type": "Length",
          "default": "\"2px\""
        },
        {
          "name": "--hamburger-layer-spacing",
          "type": "Length",
          "default": "\"4px\""
        },
        {
          "name": "--hamburger-layer-color",
          "type": "Color",
          "default": "\"black\""
        },
        {
          "name": "--hamburger-layer-border-radius",
          "type": "Length",
          "default": "0"
        },
        {
          "name": "--hamburger-hover-opacity",
          "type": "Length",
          "default": "1"
        },
        {
          "name": "--hamburger-hover-transition-duration",
          "type": "Length",
          "default": "\"0.15s\""
        },
        {
          "name": "--hamburger-hover-transition-timing-function",
          "type": "Length",
          "default": "\"linear\""
        }
      ]
    },
    {
      "name": "portal-navigation",
      "path": "./components-ts/portal-navigation/portal-navigation.ts",
      "description": "A component implementing an opinionated (but generic and hence configurable) navigation pattern.",
      "attributes": [
        {
          "name": "src",
          "description": "location from where to fetch configuration data file.",
          "type": "string"
        },
        {
          "name": "language",
          "description": "the current language. e.g. 'en' or 'de'.",
          "type": "string",
          "default": "\"en\""
        },
        {
          "name": "activeUrl",
          "description": "you can use this to set the active path via the url of an item.",
          "type": "string"
        },
        {
          "name": "currentApplication",
          "description": "the current application. Items change their routing behavior based on whether their application property matches this property or not.",
          "type": "string"
        },
        {
          "name": "internalRouting",
          "description": "true if items, by default, should route internally. Items may override this default in their own configuration. Default is false.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "hamburgerMenuExpanded",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "activeDropdown",
          "type": "string | undefined"
        },
        {
          "name": "temporaryBadgeValues",
          "type": "Map<any, any>",
          "default": "\"new Map()\""
        },
        {
          "name": "configuration",
          "type": "Configuration",
          "default": "\"new Configuration()\""
        },
        {
          "name": "activePath",
          "description": "the current path of \"active\" items. e.g. if an item in level 2 is clicked it's parent item and the corresponding menu would be considered \"active\".",
          "type": "IdPath",
          "default": "\"new IdPath()\""
        },
        {
          "name": "src",
          "attribute": "src",
          "description": "location from where to fetch configuration data file.",
          "type": "string"
        },
        {
          "name": "language",
          "attribute": "language",
          "description": "the current language. e.g. 'en' or 'de'.",
          "type": "string",
          "default": "\"en\""
        },
        {
          "name": "activeUrl",
          "attribute": "activeUrl",
          "description": "you can use this to set the active path via the url of an item.",
          "type": "string"
        },
        {
          "name": "currentApplication",
          "attribute": "currentApplication",
          "description": "the current application. Items change their routing behavior based on whether their application property matches this property or not.",
          "type": "string"
        },
        {
          "name": "internalRouting",
          "attribute": "internalRouting",
          "description": "true if items, by default, should route internally. Items may override this default in their own configuration. Default is false.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "portal-navigation.routeTo",
          "description": "Event fired when an item with a url is clicked and the routing is done internally."
        },
        {
          "name": "portal-navigation.setLanguage",
          "description": "Event fired when the 'lang' property changes."
        },
        {
          "name": "portal-navigation.configured",
          "description": "Event fired when the configuration has been successfully loaded."
        }
      ],
      "cssProperties": [
        {
          "name": "--portal-navigation-color-primary",
          "type": "color",
          "default": "\"#2c3e50\""
        },
        {
          "name": "--portal-navigation-color-secondary",
          "type": "color",
          "default": "\"rgb(66, 136, 245)\""
        },
        {
          "name": "--portal-navigation-color-selected",
          "type": "color",
          "default": "\"var(--portal-navigation-color-secondary)\""
        },
        {
          "name": "--portal-navigation-color-hover",
          "type": "color",
          "default": "\"var(--portal-navigation-color-secondary)\""
        },
        {
          "name": "--portal-navigation-color-badge",
          "type": "color",
          "default": "\"white\""
        },
        {
          "name": "--portal-navigation-color-badge-background",
          "type": "color",
          "default": "\"var(--portal-navigation-color-secondary)\""
        },
        {
          "name": "--portal-navigation-color-dropdown-background",
          "type": "color",
          "default": "\"white\""
        },
        {
          "name": "--portal-navigation-color-border",
          "type": "color",
          "default": "\"rgba(44, 62, 80, 0.1)\""
        },
        {
          "name": "--portal-navigation-color-header-background",
          "type": "color",
          "default": "\"rgba(66, 135, 245, 0.1)\""
        },
        {
          "name": "--portal-navigation-font-size",
          "type": "length",
          "default": "\"1.25rem\""
        },
        {
          "name": "--portal-navigation-font-size-badge",
          "type": "length",
          "default": "\"1rem\""
        },
        {
          "name": "--portal-navigation-font-size-tree-second-level",
          "type": "length",
          "default": "\"1rem\""
        }
      ]
    }
  ]
}